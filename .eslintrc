{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "warnOnUnsupportedTypeScriptVersion": false,
        "project": "./src/tsconfig-base.json"
    },
    "plugins": ["@typescript-eslint", "no-null"],
    "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],

    "rules": {
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/array-type": ["error", "array"],
        "@typescript-eslint/ban-types": ["error", {
            "types": {
                "Function": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`, or use `ts.AnyFunction`.",
                "Boolean": "Avoid using the `Boolean` type. Did you mean `boolean`?",
                "String": "Avoid using the `String` type. Did you mean `string`?",
                "Object": "Avoid using the `Object` type. Did you mean `object`?",
                "Number": "Avoid using the `Number` type. Did you mean `number`?"
            }
        }],
        "@typescript-eslint/class-name-casing": "error",
        "curly": ["error", "multi-line"],

        "indent": "off",
        "@typescript-eslint/indent": "error",

        "@typescript-eslint/interface-name-prefix": ["error", "never"],
        "@typescript-eslint/interface-over-type-literal": "error",
        "jsdoc-format": "error",
        "linebreak-style": ["error", "windows"],
        "no-eval": "error",
        "no-plusplus": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "no-null/no-null": "error",
        "no-fallthrough": "error",
        "no-trailing-spaces": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "prefer-const": "error",
        "quotes": ["error", "double", { "avoidEscape": true }],

        "semi": "off",
        "@typescript-eslint/semi": "error",

        "space-in-parens": "error",
        "eqeqeq": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
        "quote-props": ["error", "consistent-as-needed"],


        "arrow-parens": "off",
        "arrow-body-style": "off",
        "guard-for-in": "off",
        "@typescript-eslint/explicit-member-accessibility": "off",
        "no-cond-assign": "off",
        "no-console": "off",
        "no-debugger": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-object-literal-type-assertion": "off",
        "no-shadow": "off",
        "@typescript-eslint/import/no-internal-modules": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/import/order": "off",
        "radix": "off",
        "comma-dangle": "off",

        // These should be done automatically by a formatter. https://github.com/Microsoft/TypeScript/issues/18340
        "space-before-function-paren": "off",
        "no-multiple-empty-lines": "off",
        "eol-last": "off",
        "max-len ": "off",

        // Not doing
        "no-sequences": "off",
        "max-classes-per-file": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/no-angle-bracket-type-assertion": "off",
        "no-bitwise": "off",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-triple-slash-reference": "off",
        "sort-keys": "off",
        "one-var": "off"
    },
    "env": {
        "node": true
    }
}